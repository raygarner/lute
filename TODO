combine reading intervals (in scale) and reading steps (in fb)
implement TG V-system for chords
chord construction by interval spec
	take a scale, bass note (degree of scale), list of steps to apply
	eg 8 2,2,1,2,2,2,1 1 3,3 for C major triad
	optional: take an extra arg to specify the inversion of this chord
move a chord shape stepwise through a scale shape in parallel
create visual colour/pattern mapping for each chord/scale and write this to png
write score/tab to pdf
hash values for scales and chords
regex compatability for specifying activity string
input safety
make json path installable
use actual notes
	pitch naming will be necessary (use algorithm from mosaic)
be able to detect symmetric scales when calculating relative modes
parameterise the ammount of tones in an octave
	would involve also changing neck length
code review
read a list of intervals somehow (maybe -i [2,2,1,2,2,2,1],[2,1] to show major and diminished
chord restriction parameterisation
	max width
	max notes
	barred notes
	double stops
	specific note in bass
paralellise chord generation
parameterise neck length
testing
import+export functionality
refactoring
error handling
web server
audio output
	wav files
	midi files
capo option
